import random
from typing import List, Optional, Dict
from loguru import logger

from utils.ai_helpers import generate_clickbait_comment


class CommentEngine:
    """–î–≤–∏–∂–æ–∫ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä–æ–≤"""

    def __init__(self):
        self.comment_templates = self._load_templates()

    def _load_templates(self) -> Dict[str, List[str]]:
        """–ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"""
        return {
            "crypto_general": [
                "—ç—Ç–æ –∏–∑–º–µ–Ω–∏—Ç –≤—Å—ë, —á—Ç–æ –≤—ã –∑–Ω–∞–ª–∏ –æ {topic}... ü§Ø",
                "–ø–æ–∫–∞ –≤—ã —Å–ø–∏—Ç–µ, —Å–º–∞—Ä—Ç-–º–∞–Ω–∏ —É–∂–µ –∑–¥–µ—Å—å üê≥",
                "—Ç–µ –∫—Ç–æ –ø–æ–Ω—è–ª - —É–∂–µ –≤ –ø—Ä–∏–±—ã–ª–∏ üìà",
                "–Ω–µ –≤—Å–µ –≥–æ—Ç–æ–≤—ã –∫ —Ç–æ–º—É, —á—Ç–æ –±—É–¥–µ—Ç –¥–∞–ª—å—à–µ...",
                "–≤–∫–ª—é—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å üîî",
            ],
            "technical": [
                "—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏ —ç—Ç–æ –ø—Ä–æ—Ä—ã–≤, –≤–æ—Ç –ø–æ—á–µ–º—É... üîß",
                "–∫–æ–¥ –Ω–µ –≤—Ä–µ—Ç, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–∞–º–∏ üíª",
                "–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Ä–µ—à–∞–µ—Ç –≤—Å—ë üèóÔ∏è",
                "—ç—Ç–æ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å {topic} üöÄ",
                "–∞–ª–≥–æ—Ä–∏—Ç–º –≥–µ–Ω–∏–∞–ª–µ–Ω, –ø—Ä–∏–∑–Ω–∞—é üß†",
            ],
            "hype": [
                "—ç—Ç–æ –Ω–∞—á–∞–ª–æ —á–µ–≥–æ-—Ç–æ –±–æ–ª—å—à–æ–≥–æ üöÄ",
                "–∑–∞–ø–æ–º–Ω–∏—Ç–µ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç üì∏",
                "—Ñ–∞–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω—è—Ç –≤–∞—à—É —Å—Ç—Ä–∞—Ç–µ–≥–∏—é ‚ö°",
                "—Ç–æ, –æ —á–µ–º –≤—Å–µ –±—É–¥—É—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –∑–∞–≤—Ç—Ä–∞ üî•",
                "–∞–ª—å—Ñ–∞ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Å–ª–µ–¥–∏—Ç –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ üëÄ",
            ],
            "analytical": [
                "—Ü–∏—Ñ—Ä—ã –≥–æ–≤–æ—Ä—è—Ç —Å–∞–º–∏ –∑–∞ —Å–µ–±—è üìä",
                "—Ç—Ä–µ–Ω–¥ –æ—á–µ–≤–∏–¥–µ–Ω –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –≤–∏–¥–∏—Ç üìà",
                "–º–µ—Ç—Ä–∏–∫–∏ –Ω–µ –≤—Ä—É—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–º–∏ üìâ",
                "–¥–∞–Ω–Ω—ã–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—Ç –º–æ—é —Ç–µ–æ—Ä–∏—é üéØ",
                "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–∞ –º–æ–µ–π —Å—Ç–æ—Ä–æ–Ω–µ üíπ",
            ],
            "philosophical": [
                "—ç—Ç–æ –±–æ–ª—å—à–µ —á–µ–º –ø—Ä–æ—Å—Ç–æ {topic} üåå",
                "–ø–∞—Ä–∞–¥–∏–≥–º–∞ –º–µ–Ω—è–µ—Ç—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å üîÑ",
                "–±—É–¥—É—â–µ–µ —É–∂–µ –∑–¥–µ—Å—å, –ø—Ä–æ—Å—Ç–æ –Ω–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–æ üåê",
                "—ç–≤–æ–ª—é—Ü–∏—è –Ω–µ–∏–∑–±–µ–∂–Ω–∞ üß¨",
                "–º—ã —Å–≤–∏–¥–µ—Ç–µ–ª–∏ –∏—Å—Ç–æ—Ä–∏–∏ üìú",
            ]
        }

    async def generate_comment(self, context: str = None, style: str = "random") -> str:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π

        Args:
            context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ (–æ —á–µ–º –ø–æ—Å—Ç)
            style: –°—Ç–∏–ª—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è (crypto_general, technical, hype, analytical, philosophical, random)

        Returns:
            –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        """
        # –í—ã–±–∏—Ä–∞–µ–º —Å—Ç–∏–ª—å
        if style == "random" or style not in self.comment_templates:
            style = random.choice(list(self.comment_templates.keys()))

        # –í—ã–±–∏—Ä–∞–µ–º —à–∞–±–ª–æ–Ω
        template = random.choice(self.comment_templates[style])

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–æ–ø–∏–∫
        if context:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
            topic = self._extract_topic(context)
        else:
            # –°–ª—É—á–∞–π–Ω—ã–π —Ç–æ–ø–∏–∫
            topics = ["DeFi", "NFT", "Layer 2", "Web3", "–º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π", "DAO", "GameFi", "—Å—Ç–µ–π–∫–∏–Ω–≥–µ"]
            topic = random.choice(topics)

        # –ó–∞–º–µ–Ω—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã
        comment = template.replace("{topic}", topic)

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å
        comment = self._add_variations(comment)

        # –ï—Å–ª–∏ –µ—Å—Ç—å AI, —É–ª—É—á—à–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        try:
            from utils.ai_helpers import generate_clickbait_comment
            ai_comment = await generate_clickbait_comment(topic)
            if ai_comment and len(ai_comment) < 280:
                return ai_comment
        except Exception as e:
            logger.debug(f"AI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {e}")

        return comment

    def generate_reply(self, original_comment: str = None) -> str:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π

        Args:
            original_comment: –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π

        Returns:
            –û—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        """
        reply_templates = [
            "—Ç–æ—á–Ω–æ –ø–æ–¥–º–µ—á–µ–Ω–æ! {addition}",
            "—Å–æ–≥–ª–∞—Å–µ–Ω, {addition}",
            "—ç—Ç–æ —Ñ–∞–∫—Ç üíØ {addition}",
            "–≤—ã –ø—Ä–∞–≤—ã, {addition}",
            "+1 –∫ —ç—Ç–æ–º—É, {addition}",
            "–∏–º–µ–Ω–Ω–æ! {addition}",
            "–≤ —Ç–æ—á–∫—É üéØ {addition}",
        ]

        additions = [
            "–æ—Å–æ–±–µ–Ω–Ω–æ —Å–µ–π—á–∞—Å",
            "–≤—Ä–µ–º—è –ø–æ–∫–∞–∂–µ—Ç",
            "—Å–ª–µ–¥–∏–º –∑–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ–º",
            "–∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–∞",
            "–≤—Å—ë —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è",
            "–±—É–¥–µ—Ç –∂–∞—Ä–∫–æ",
        ]

        template = random.choice(reply_templates)
        addition = random.choice(additions)

        return template.replace("{addition}", addition)

    def _extract_topic(self, context: str) -> str:
        """–ò–∑–≤–ª–µ—á—å —Ç–æ–ø–∏–∫ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
        # –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        keywords = {
            "defi": "DeFi",
            "nft": "NFT",
            "layer": "Layer 2",
            "web3": "Web3",
            "dao": "DAO",
            "gamefi": "GameFi",
            "–º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω": "–º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω–æ–π",
            "—Å—Ç–µ–π–∫": "—Å—Ç–µ–π–∫–∏–Ω–≥–µ",
            "–ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç": "–ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏",
            "yield": "yield farming",
        }

        context_lower = context.lower()
        for key, value in keywords.items():
            if key in context_lower:
                return value

        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—â–∏–π —Ç–µ—Ä–º–∏–Ω
        return "–∫—Ä–∏–ø—Ç–µ"

    def _add_variations(self, comment: str) -> str:
        """–î–æ–±–∞–≤–∏—Ç—å –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"""
        # –°–ª—É—á–∞–π–Ω—ã–µ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏
        variations = [
            ("...", "..."),
            ("...", "‚Ä¶ "),
            ("üîî", "üîî"),
            ("üöÄ", "üöÄ"),
            ("üìà", "üìà"),
            ("üëÄ", "üëÄ"),
            ("", " üëá"),
            ("", " ‚òùÔ∏è"),
        ]

        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é –≤–∞—Ä–∏–∞—Ü–∏—é —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 30%
        if random.random() < 0.3:
            old, new = random.choice(variations)
            if old in comment:
                comment = comment.replace(old, new)
            elif old == "":
                comment += new

        return comment

    def generate_thread_hook(self) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ö—É–∫ –¥–ª—è —Ç—Ä–µ–¥–∞ (–ø–µ—Ä–≤—ã–π —Ç–≤–∏—Ç)"""
        hooks = [
            "–¢—Ä–µ–¥ –æ —Ç–æ–º, –ø–æ—á–µ–º—É {topic} –∏–∑–º–µ–Ω–∏—Ç –≤—Å—ë üßµ",
            "–ù–µ–ø–æ–ø—É–ª—è—Ä–Ω–æ–µ –º–Ω–µ–Ω–∏–µ –æ {topic} (—Ç—Ä–µ–¥) üëá",
            "–¢–æ, —á—Ç–æ –Ω–∏–∫—Ç–æ –Ω–µ –≥–æ–≤–æ—Ä–∏—Ç –æ {topic} ü§ê",
            "–†–∞–∑–±–æ—Ä {topic} –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –≤ —Ç–µ–º–µ üßµ",
            "–ü–æ—á–µ–º—É —è all-in –≤ {topic} (–ª–∏—á–Ω—ã–π –æ–ø—ã—Ç) üíé",
            "{topic}: –ø–æ–ª–Ω—ã–π –≥–∞–π–¥ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö üìö",
            "3 –ø—Ä–∏—á–∏–Ω—ã –ø–æ—á–µ–º—É {topic} - —ç—Ç–æ –±—É–¥—É—â–µ–µ üöÄ",
        ]

        topics = ["DeFi 2.0", "–Ω–æ–≤—ã–π L2", "—ç—Ç–æ—Ç –ø—Ä–æ—Ç–æ–∫–æ–ª", "–¥–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥", "—ç—Ç–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è"]
        topic = random.choice(topics)
        hook = random.choice(hooks)

        return hook.replace("{topic}", topic)