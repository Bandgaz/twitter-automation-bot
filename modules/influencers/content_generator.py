import random
from typing import Optional, List
from loguru import logger

from config import AI_CONFIG, OPENAI_API_KEY
from utils.ai_helpers import paraphrase_text


class ContentGenerator:
    """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –∏–Ω—Ñ–ª—é–µ–Ω—Å–µ—Ä–æ–≤"""

    def __init__(self):
        self.use_ai = bool(OPENAI_API_KEY)

    async def generate_from_source(self, source_username: str) -> Optional[str]:
        """
        –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç–≤–∏—Ç–æ–≤ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
        """
        # –ó–∞–≥–ª—É—à–∫–∞ - –ø—Ä–∏–º–µ—Ä—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        templates = [
            "The crypto market is showing interesting patterns today. What are your thoughts on the current trend? ü§î",
            "Just analyzed the latest DeFi protocols. The innovation in this space is mind-blowing! üöÄ",
            "Remember: In crypto, patience and research are your best friends. DYOR! üìö",
            "The future of finance is being built right now. Are you paying attention? üëÄ",
            "Interesting developments in the {topic} space. This could be game-changing! üí°",
            "Market volatility is just noise if you're thinking long-term. Focus on fundamentals. üìä",
            "New project alert! Always exciting to see innovation in the blockchain space. üî•",
            "The key to success in crypto? Education, patience, and risk management. üíé",
        ]

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —à–∞–±–ª–æ–Ω
        content = random.choice(templates)

        # –ó–∞–º–µ–Ω—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã
        topics = ["DeFi", "NFT", "Layer 2", "Web3", "Metaverse", "GameFi"]
        content = content.replace("{topic}", random.choice(topics))

        # –ï—Å–ª–∏ –µ—Å—Ç—å AI, –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä—É–µ–º
        if self.use_ai:
            try:
                content = await paraphrase_text(content)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ AI –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∫–∏: {e}")

        return content

    async def generate_comment(self, context: str = None) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π"""
        templates = [
            "This is exactly what I've been saying! üéØ",
            "Interesting perspective. Have you considered {aspect}?",
            "The implications of this are huge ü§Ø",
            "This deserves more attention üëÄ",
            "Finally someone said it! üíØ",
            "Game changer if true üöÄ",
            "This is why I love crypto Twitter üôå",
            "Big if true! Following for more insights üîî",
        ]

        comment = random.choice(templates)

        # –ó–∞–º–µ–Ω—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã
        aspects = [
            "the regulatory implications",
            "the technical challenges",
            "the market dynamics",
            "the long-term vision",
            "the community aspect"
        ]
        comment = comment.replace("{aspect}", random.choice(aspects))

        return comment

    async def generate_quote_text(self, original_tweet: str = None) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
        templates = [
            "This! üëÜ {addition}",
            "Adding to this great point: {addition}",
            "Couldn't agree more. {addition}",
            "Important thread üßµ {addition}",
            "Everyone should read this. {addition}",
        ]

        additions = [
            "The future is being built now.",
            "This is why we're early.",
            "Knowledge is power in this space.",
            "DYOR but this is solid.",
            "The innovation continues!",
        ]

        template = random.choice(templates)
        addition = random.choice(additions)

        return template.replace("{addition}", addition)